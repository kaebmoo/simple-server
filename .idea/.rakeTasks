<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="app:update:bin" taksId="bin" /><RakeTask description="" fullCmd="app:update:configs" taksId="configs" /><RakeTask description="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="appointment_notification"><RakeTask description="Send automatic SMS reminder to patients who missed their scheduled visit by three days" fullCmd="appointment_notification:three_days_after_missed_visit" taksId="three_days_after_missed_visit" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask description="" fullCmd="assets:clean" taksId="clean" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="autoprefixer"><RakeTask description="Show selected browsers and prefixed CSS properties and values" fullCmd="autoprefixer:info" taksId="info" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cohort_reports"><RakeTask description="Generate cohort report CSV for each state" fullCmd="cohort_reports:generate[year,quarter,organization_name]" taksId="generate[year,quarter,organization_name]" /><RakeTask description="" fullCmd="cohort_reports:generate" taksId="generate" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="data_fixes"><RakeTask description="Move all data recorded by a user from a source facility to a destination facility" fullCmd="data_fixes:move_user_data_from_source_to_destination_facility[user_id,source_facility_id,destination_facility_id]" taksId="move_user_data_from_source_to_destination_facility[user_id,source_facility_id,destination_facility_id]" /><RakeTask description="" fullCmd="data_fixes:move_user_data_from_source_to_destination_facility" taksId="move_user_data_from_source_to_destination_facility" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="data_migration"><RakeTask description="Backfill user_ids for a model from audit_logs (Appointment, PrescriptionDrug and MedicalHistory)" fullCmd="data_migration:backfill_user_ids_for_model[model]" taksId="backfill_user_ids_for_model[model]" /><RakeTask description="Create master users for admins" fullCmd="data_migration:create_master_users_for_admins" taksId="create_master_users_for_admins" /><RakeTask description="Move all the user phone numbers from the call logs to a de-normalized caller_phone_number field" fullCmd="data_migration:de_normalize_user_phone_numbers_in_call_logs" taksId="de_normalize_user_phone_numbers_in_call_logs" /><RakeTask description="Export audit logs to files" fullCmd="data_migration:export_audit_logs_to_files[from_date,to_date]" taksId="export_audit_logs_to_files[from_date,to_date]" /><RakeTask description="Fix null invited_by for email authentications when migrating from email_authentications" fullCmd="data_migration:fix_invited_by_for_email_authentications" taksId="fix_invited_by_for_email_authentications" /><RakeTask description="Set reminder_consent to granted for all patients" fullCmd="data_migration:grant_reminder_consent_for_all_patients" taksId="grant_reminder_consent_for_all_patients" /><RakeTask description="" fullCmd="data_migration:backfill_user_ids_for_model" taksId="backfill_user_ids_for_model" /><RakeTask description="" fullCmd="data_migration:export_audit_logs_to_files" taksId="export_audit_logs_to_files" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeTask description="Generate an Entity-Relationship Diagram based on your models" fullCmd="erd" taksId="erd" /><RakeGroup description="" fullCmd="" taksId="exotel_tasks"><RakeTask description="Get phone number details from exotel" fullCmd="exotel_tasks:update_all_patients_phone_number_details" taksId="update_all_patients_phone_number_details" /><RakeTask description="Whitelist patient phone numbers for exotel" fullCmd="exotel_tasks:whitelist_patient_phone_numbers" taksId="whitelist_patient_phone_numbers" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="import"><RakeTask description="Import facilites from CSV; Example: rake &quot;bulk_upload:facilities_from_csv[path/to/file]&quot;" fullCmd="import:facilities_from_csv[facilities_file]" taksId="facilities_from_csv[facilities_file]" /><RakeTask description="" fullCmd="import:facilities_from_csv" taksId="facilities_from_csv" /></RakeGroup><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="Create test databases via db:create --&gt; parallel:create[num_cpus]" fullCmd="parallel:create[count]" taksId="create[count]" /><RakeTask description="Drop test databases via db:drop --&gt; parallel:drop[num_cpus]" fullCmd="parallel:drop[count]" taksId="drop[count]" /><RakeTask description="Run features in parallel with parallel:features[num_cpus]" fullCmd="parallel:features[count,pattern,options,pass_through]" taksId="features[count,pattern,options,pass_through]" /><RakeTask description="Run features-spinach in parallel with parallel:features-spinach[num_cpus]" fullCmd="parallel:features-spinach[count,pattern,options,pass_through]" taksId="features-spinach[count,pattern,options,pass_through]" /><RakeTask description="Load dumped schema for test databases via db:schema:load --&gt; parallel:load_schema[num_cpus]" fullCmd="parallel:load_schema[count]" taksId="load_schema[count]" /><RakeTask description="Load structure for test databases via db:structure:load --&gt; parallel:load_structure[num_cpus]" fullCmd="parallel:load_structure[count]" taksId="load_structure[count]" /><RakeTask description="Update test databases via db:migrate --&gt; parallel:migrate[num_cpus]" fullCmd="parallel:migrate[count]" taksId="migrate[count]" /><RakeTask description="Update test databases by dumping and loading --&gt; parallel:prepare[num_cpus]" fullCmd="parallel:prepare[count]" taksId="prepare[count]" /><RakeTask description="Launch given rake command in parallel" fullCmd="parallel:rake[command,count]" taksId="rake[command,count]" /><RakeTask description="Rollback test databases via db:rollback --&gt; parallel:rollback[num_cpus]" fullCmd="parallel:rollback[count]" taksId="rollback[count]" /><RakeTask description="Load the seed data from db/seeds.rb via db:seed --&gt; parallel:seed[num_cpus]" fullCmd="parallel:seed[count]" taksId="seed[count]" /><RakeTask description="Setup test databases via db:setup --&gt; parallel:setup[num_cpus]" fullCmd="parallel:setup[count]" taksId="setup[count]" /><RakeTask description="Run spec in parallel with parallel:spec[num_cpus]" fullCmd="parallel:spec[count,pattern,options,pass_through]" taksId="spec[count,pattern,options,pass_through]" /><RakeTask description="Run test in parallel with parallel:test[num_cpus]" fullCmd="parallel:test[count,pattern,options,pass_through]" taksId="test[count,pattern,options,pass_through]" /><RakeTask description="" fullCmd="parallel:create" taksId="create" /><RakeTask description="" fullCmd="parallel:drop" taksId="drop" /><RakeTask description="" fullCmd="parallel:features" taksId="features" /><RakeTask description="" fullCmd="parallel:features-spinach" taksId="features-spinach" /><RakeTask description="" fullCmd="parallel:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="parallel:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="parallel:migrate" taksId="migrate" /><RakeTask description="" fullCmd="parallel:prepare" taksId="prepare" /><RakeTask description="" fullCmd="parallel:rake" taksId="rake" /><RakeTask description="" fullCmd="parallel:rollback" taksId="rollback" /><RakeTask description="" fullCmd="parallel:seed" taksId="seed" /><RakeTask description="" fullCmd="parallel:setup" taksId="setup" /><RakeTask description="" fullCmd="parallel:spec" taksId="spec" /><RakeTask description="" fullCmd="parallel:test" taksId="test" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="raven"><RakeTask description="Send a test event to the remote Sentry server" fullCmd="raven:test[dsn]" taksId="test[dsn]" /><RakeTask description="" fullCmd="raven:test" taksId="test" /></RakeGroup><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeGroup description="" fullCmd="" taksId="rswag"><RakeGroup description="" fullCmd="" taksId="specs"><RakeTask description="Generate Swagger JSON files from integration specs" fullCmd="rswag:specs:swaggerize" taksId="swaggerize" /></RakeGroup></RakeGroup><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/api" fullCmd="spec:api" taksId="api" /><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/exporters" fullCmd="spec:exporters" taksId="exporters" /><RakeTask description="Run the code examples in spec/features" fullCmd="spec:features" taksId="features" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/jobs" fullCmd="spec:jobs" taksId="jobs" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run the code examples in spec/payloads" fullCmd="spec:payloads" taksId="payloads" /><RakeTask description="Run the code examples in spec/policies" fullCmd="spec:policies" taksId="policies" /><RakeTask description="Run the code examples in spec/queries" fullCmd="spec:queries" taksId="queries" /><RakeTask description="Run the code examples in spec/requests" fullCmd="spec:requests" taksId="requests" /><RakeTask description="Run the code examples in spec/services" fullCmd="spec:services" taksId="services" /><RakeTask description="Run the code examples in spec/transformers" fullCmd="spec:transformers" taksId="transformers" /><RakeTask description="" fullCmd="spec:prepare" taksId="prepare" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask description="" fullCmd="time:zones" taksId="zones" /><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="yarn"><RakeTask description="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeGroup description="" fullCmd="" taksId="erd"><RakeTask description="" fullCmd="erd:check_dependencies" taksId="check_dependencies" /><RakeTask description="" fullCmd="erd:generate" taksId="generate" /><RakeTask description="" fullCmd="erd:load_models" taksId="load_models" /><RakeTask description="" fullCmd="erd:options" taksId="options" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="generate"><RakeTask description="" fullCmd="generate:seed" taksId="seed" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /></RakeGroup></Settings>
